name: merge validations

on:
  pull_request:
    branches: [ main ]
    types: [ opened ]
  issue_comment:
    types: [ created ]
  workflow_dispatch:
jobs:


  setup_gha:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/github-script@v3
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
            try {
              const result = await github.pulls.get(request)
              return result.data
            } catch (err) {
              core.setFailed(`Request failed with error ${err}`)
            }
      - uses: actions/checkout@v2
        with:
          repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }} # or .head.ref for branch name

      - name: Comment on PR
        if: ${{ github.event.action == 'opened' }}
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'Thank you for contributing to the ops-terra-utils repo! \n A test suite will now begin running to ensure that no breaking changes are made.\n If these tests fail you can have them re-run after making changes by commenting `/run_tests`'
            })



  E2E_linting_check:
    # only run newly created PR or comment with /run_tests
    runs-on: ubuntu-latest
    needs: setup_gha
    steps:
      - name: Get PR informations
        if: github.event.comment.body
        id: pr_data
        run: |
          echo "::set-output name=branch::${{ fromJson(steps.request.outputs.data).head.ref }}"
          echo "::set-output name=repo_name::${{ fromJson(steps.request.outputs.data).base.repo.full_name }}"
          echo "::set-output name=repo_clone_url::${{ fromJson(steps.request.outputs.data).base.repo.clone_url }}"
          echo "::set-output name=repo_ssh_url::${{ fromJson(steps.request.outputs.data).base.repo.ssh_url }}"
      - name: clone branch of PR
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.pr_data.outputs.branch }}

      - name: Checkout PR Branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: remove comment whitespace
        id: regex-match
        uses: actions-ecosystem/action-regex-match@v2
        with:
          text: ${{ github.event.comment.body }}
          regex: '/(?<![\w\d])\/run_tests(?![\w\d])/gm'
      - name: Perform linting checks
        if: ${{ github.event.action == 'opened' || steps.regex-match.outputs.match == '/run_tests' }}
        uses: ./.github/actions/linting-check

  E2E_wdl_validation:
    runs-on: ubuntu-latest
    needs: E2E_linting_check
    steps:
        - name: Checkout PR Branch
          uses: actions/checkout@v3
          with:
            ref: ${{ github.event.pull_request.head.sha }}
        - name: find any changed wdl files
          id: get_updated_wdls
          uses: tj-actions/changed-files@v45
          with:
            files: 'wdl/**.wdl'
        - name: run_wdl_validation
          if: steps.get_updated_wdls.outputs.any_changed == 'true'
          uses: ./.github/workflows/validate_wdls.yaml

  E2E_integration_tests:
    needs: E2E_linting_check
    uses: ./.github/workflows/integration-tests.yaml
    secrets: inherit
